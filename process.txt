Filter real data: (1 time)
    python3 data_process/filter_real_images.py 

Merge sim data: (each time when we change the sim data)
    python3 data_process/merge_json_sim.py 

Transfer images to gan folders: (Make sure the folders are empty)
    python3 data_process/transfer_images.py --data_type real --data_num 6 --folder_type A --samples 4980 --data_kind transformed
    python3 data_process/transfer_images.py --data_type sim --data_num 6 --folder_type B --samples 4980 --data_kind transformed

Train CycleGAN:
    python3 train.py --dataroot ./datasets/data_Allsight/ --name exp_distil --model distil_cycle_gan --epoch_distil 1 --distil_policy linear --distil_slope 0.03 --lambda_C 0.5

Test CycleGAN:
    python3 test.py --dataroot ./datasets/data_Allsight/ --name allsight_3 --model cycle_gan --epoch # 

Create json for the gan images:
    python3 data_process/sim2gan_json.py --sim_data_num 5 --cgan_num 2  --name distil_cgan --data_kind aligned --cgan_epoch latest --save True

Train and Test - regressor:
    python3 train_regressor.py --train_type gan --sim_data_num 5 --real_data_num 5 --cgan_num 2 --gan_name distil_cgan --cgan_epoch latest --input_type with_ref_6c --leds white

weekend runs: 
    zeus 2 (def): python3 train.py --name allsight_11 --model cycle_gan --gpu_ids 2
    zeus 3 (unet): python3 train.py --name allsight_12 --model cycle_gan --netG unet_128 --gpu_ids 3 --display_port 8098
    alon (lambda_A_B): python3 train.py --name allsight_13 --model cycle_gan --gan_mode wgangp
    curtis (regularization): python3 train.py --name allsight_14 --model cycle_gan --norm batch